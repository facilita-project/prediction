'use strict'

const http = require('http')
const debug = require('debug')
const env = require('sugar-env')
const merge = require('lodash.merge')

/**
 * @param  {Function} appFactory  App factory.
 * @param  {Object}   options     Config object.
 */
const start = (appFactory, options) => {
  const config = merge(
    { name: env.get(['APP_NAME', 'npm_package_name'], 'app') },
    { server: { binding: { socket: env.get('SERVER_BINDING_SOCKET') } } },
    { server: { binding: { ip: env.get('SERVER_BINDING_IP', '0.0.0.0') } } },
    { server: { binding: { port: parseInt(env.get('SERVER_BINDING_PORT', 3000)) } } },
    options
  )

  const server = http.createServer(appFactory(config, env.current))

  server.on('listening', () => {
    const addr = server.address()
    const bind = typeof addr === 'string'
      ? `pipe ${addr}`
      : `http://${addr.address}:${addr.port}/`
    debug(`appify:server`)(`Listening on ${bind}`)
  })

  if (config.server.binding.socket) {
    return server.listen(config.server.binding.socket)
  }

  server.listen(config.server.binding.port, config.server.binding.ip)
}

module.exports = { start }
